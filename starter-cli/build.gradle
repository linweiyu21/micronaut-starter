plugins {
    id 'io.micronaut.internal.build.starter-cli-module'
}

repositories {
    maven { url 'https://maven.aliyun.com/repository/central' }
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

ext {
    picocliVersion = '4.6.3'
}

configurations {
    generateConfig
}

configurations.all {
    resolutionStrategy {
        // prevent fatJar result containing multiple versions of picocli
        force("info.picocli:picocli:$picocliVersion")
    }
}

dependencies {
    annotationProcessor('org.projectlombok:lombok:1.18.2')
    
    annotationProcessor("io.micronaut:micronaut-graal")
    api project(":starter-core")
    api "info.picocli:picocli:${picocliVersion}"
    api "info.picocli:picocli-shell-jline3:${picocliVersion}"
    api "com.fizzed:rocker-runtime:$rockerVersion"

    implementation "org.slf4j:slf4j-nop:1.7.36"

    compileOnly "org.graalvm.nativeimage:svm"

    implementation "org.fusesource.jansi:jansi:1.18"
    implementation "org.yaml:snakeyaml:1.30"

    implementation group: 'javax.inject', name: 'javax.inject', version: '1'

    implementation 'org.shredzone.acme4j:acme4j-client:2.12'
    implementation 'org.shredzone.acme4j:acme4j-utils:2.12'

    generateConfig "info.picocli:picocli-codegen:${picocliVersion}"

    testImplementation("io.micronaut.picocli:micronaut-picocli")

    testImplementation "org.testcontainers:spock"
    testImplementation 'org.reflections:reflections:0.10.2'
    testImplementation 'org.codehaus.groovy:groovy-xml'
    
    implementation 'cn.hutool:hutool-core:5.8.4'
    implementation 'cn.hutool:hutool-json:5.8.4'
    
    // entity 生成工具需要的依赖
    implementation 'com.google.guava:guava:26.0-jre'
    implementation 'org.apache.commons:commons-lang3:3.8.1'
    implementation 'org.freemarker:freemarker:2.3.28'
    implementation 'org.yaml:snakeyaml:1.23'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    runtimeOnly("mysql:mysql-connector-java")
    
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
    compileOnly 'org.projectlombok:lombok:1.18.2'
    // entity 生成工具需要的依赖
}

application {
    mainClass = "io.micronaut.starter.cli.MicronautStarter"
}

rocker {
    javaVersion = '1.8'
    postProcessing = ['io.micronaut.starter.rocker.WhitespaceProcessor']
}

startScripts {
    applicationName = 'mn'
}

sdkman {
    api = "https://vendors.sdkman.io"
    consumerKey = System.getenv("GVM_SDKVENDOR_KEY") ?: project.hasProperty("gvmSdkvendorKey") ? project.gvmSdkvendorKey : ''
    consumerToken = System.getenv("GVM_SDKVENDOR_TOKEN") ?: project.hasProperty("gvmSdkvendorToken") ? project.gvmSdkvendorToken : ''
    candidate = "micronaut"
    version = project.version
    hashtag = "#micronautfw"
    platforms = [
            // TODO:  Once graal native-image works for arm OSX, we should switch to building and publishing a non-rosetta release (https://github.com/oracle/graal/issues/2666)
            "MAC_ARM64":"https://github.com/micronaut-projects/micronaut-starter/releases/download/v${project.version}/mn-darwin-amd64-v${project.version}.zip",
            "MAC_OSX":"https://github.com/micronaut-projects/micronaut-starter/releases/download/v${project.version}/mn-darwin-amd64-v${project.version}.zip",
            "WINDOWS_64":"https://github.com/micronaut-projects/micronaut-starter/releases/download/v${project.version}/mn-win-amd64-v${project.version}.zip",
            "LINUX_64":"https://github.com/micronaut-projects/micronaut-starter/releases/download/v${project.version}/mn-linux-amd64-v${project.version}.zip"
    ]
}
